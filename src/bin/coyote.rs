////////////////////////////////////////////////////////////////////////////////////////////////////

// library wrapper
use coyote::*;

////////////////////////////////////////////////////////////////////////////////////////////////////

// standard libraries
use anyhow::Result as anyResult;
use clap::Parser;
use std::io;

////////////////////////////////////////////////////////////////////////////////////////////////////

// crate utilities
use crate::utils::reader::*;
use crate::utils::help::*;
use crate::utils::sql::*;
use crate::custom::cards::Card;
use coyote::custom::train::train;

////////////////////////////////////////////////////////////////////////////////////////////////////

fn main() -> anyResult<()> {

  // collect command line arguments
  let params = Cli::parse();

  match &params.command {
    Commands::Load { input } => {

      // open database connection
      let conn = establish_db_connection()?;

      reader(input.to_path_buf(), conn)?;
    }

    Commands::Train {  } => {
      let _ = train();
    }
  }

  Ok(())
}

////////////////////////////////////////////////////////////////////////////////////////////////////
